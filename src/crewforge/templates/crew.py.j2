from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task
from crewai.agents.agent_builder.base_agent import BaseAgent
from typing import List

{#- Collect all unique tools from agents and tasks -#}
{%- set all_tools = [] %}
{%- for agent in agents %}
  {%- if agent.tools %}
    {%- for tool in agent.tools %}
      {%- if tool not in all_tools %}
        {%- set _ = all_tools.append(tool) %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
{%- for task in tasks %}
  {%- if task.tools %}
    {%- for tool in task.tools %}
      {%- if tool not in all_tools %}
        {%- set _ = all_tools.append(tool) %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
{%- endfor %}

{#- Import CrewAI tools if any are needed -#}
{%- if all_tools %}
from crewai_tools import {{ all_tools|join(', ') }}
{%- endif %}

{#- Import custom tools if specified -#}
{%- if tools %}
from .tools.custom_tool import {{ tools|join(', ') }}
{%- endif %}

# If you want to run a snippet of code before or after the crew starts,
# you can use the @before_kickoff and @after_kickoff decorators
# https://docs.crewai.com/concepts/crews#example-crew-class-with-decorators

@CrewBase
class {{ project_name|to_class_name }}():
    """{{ project_name|replace('_', ' ')|replace('-', ' ')|title }} crew"""

    agents: List[BaseAgent]
    tasks: List[Task]

    # Learn more about YAML configuration files here:
    # Agents: https://docs.crewai.com/concepts/agents#yaml-configuration-recommended
    # Tasks: https://docs.crewai.com/concepts/tasks#yaml-configuration-recommended
    
    # If you would like to add tools to your agents, you can learn more about it here:
    # https://docs.crewai.com/concepts/agents#agent-tools

{%- for agent in agents %}
{%- set agent_key = agent.role|to_python_identifier %}
    @agent
    def {{ agent_key }}(self) -> Agent:
        return Agent(
            config=self.agents_config['{{ agent_key }}'],  # type: ignore[index]
            verbose=True
            {%- if agent.tools %},
            tools=[
                {%- for tool in agent.tools %}
                {{ tool }}(){% if not loop.last %}, {% endif %}
                {%- endfor %}
            ]
            {%- endif %}
        )
{% endfor %}

    # To learn more about structured task outputs,
    # task dependencies, and task callbacks, check out the documentation:
    # https://docs.crewai.com/concepts/tasks#overview-of-a-task

{%- for task in tasks %}
{%- set task_key = task.description|to_python_identifier|truncate_identifier(30) %}
    @task
    def {{ task_key }}_task(self) -> Task:
        return Task(
            config=self.tasks_config['{{ task_key }}_task'],  # type: ignore[index]
            {%- if task.output_file %},
            output_file='{{ task.output_file }}'
            {%- endif %}
        )
{% endfor %}

    @crew
    def crew(self) -> Crew:
        """Creates the {{ project_name|replace('_', ' ')|replace('-', ' ')|title }} crew"""
        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,    # Automatically created by the @task decorator
            process=Process.sequential,
            verbose=True,
            # process=Process.hierarchical,  # Uncomment for hierarchical process
            # For hierarchical process, see:
            # https://docs.crewai.com/concepts/processes#hierarchical_process
        )