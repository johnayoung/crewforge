from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task
from crewai.agents.agent_builder.base_agent import BaseAgent
from typing import List
{%- set all_tools = [] %}
{%- for agent in agents %}
  {%- if agent.tools %}
    {%- for tool in agent.tools %}
      {%- if tool not in all_tools %}
        {%- set _ = all_tools.append(tool) %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
{%- for task in tasks %}
  {%- if task.tools %}
    {%- for tool in task.tools %}
      {%- if tool not in all_tools %}
        {%- set _ = all_tools.append(tool) %}
      {%- endif %}
    {%- endfor %}
  {%- endif %}
{%- endfor %}
{%- if all_tools %}
from crewai_tools import {{all_tools|join(', ')}}
{%- endif %}
{%- if tools %}
from .tools.custom_tool import {{tools|join(', ')}}
{%- endif %}

# If you want to run a snippet of code before or after the crew starts,
# you can use the @before_kickoff and @after_kickoff decorators
# https://docs.crewai.com/concepts/crews#example-crew-class-with-decorators

@CrewBase
class {{project_name|title|replace('-', '')|replace('_', '')}}():
    """{{project_name|title|replace('-', ' ')|replace('_', ' ')}} crew"""

    agents: List[BaseAgent]
    tasks: List[Task]

    # Learn more about YAML configuration files here:
    # Agents: https://docs.crewai.com/concepts/agents#yaml-configuration-recommended
    # Tasks: https://docs.crewai.com/concepts/tasks#yaml-configuration-recommended
    
    # If you would like to add tools to your agents, you can learn more about it here:
    # https://docs.crewai.com/concepts/agents#agent-tools
{%- for agent in agents %}
{%- set agent_key = agent.role|lower|regex_replace('[^a-z0-9\s]', '')|replace(' ', '_')|replace('-', '_') %}
    @agent
    def {{agent_key}}(self) -> Agent:
        return Agent(
            config=self.agents_config['{{agent_key}}'],  # type: ignore[index]
            verbose=True{%- if agent.tools %},
            tools=[{%- for tool in agent.tools %}{{tool}}(){%- if not loop.last %}, {%- endif %}{%- endfor %}]{%- endif %}
        )

{% endfor %}
    # To learn more about structured task outputs,
    # task dependencies, and task callbacks, check out the documentation:
    # https://docs.crewai.com/concepts/tasks#overview-of-a-task
{%- for task in tasks %}
{%- set task_key = task.description[:50]|lower|regex_replace('[^a-z0-9\s]', '')|replace(' ', '_')|truncate(30, true, '')|regex_replace('_+', '_') %}
    @task
    def {{task_key}}_task(self) -> Task:
        return Task(
            config=self.tasks_config['{{task_key}}_task'],  # type: ignore[index]{%- if task.output_file %},
            output_file='{{task.output_file}}'{%- endif %}
        )

{% endfor %}
    @crew
    def crew(self) -> Crew:
        """Creates the {{project_name|title|replace('-', ' ')|replace('_', ' ')}} crew"""
        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,    # Automatically created by the @task decorator
            process=Process.sequential,  # In case you want to use a hierarchical process: https://docs.crewai.com/concepts/processes#hierarchical_process
            verbose=True,
            # process=Process.hierarchical, # In case you want to use a hierarchical process: https://docs.crewai.com/concepts/processes#hierarchical_process
        )